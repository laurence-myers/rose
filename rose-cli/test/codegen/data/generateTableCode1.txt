// Generated file; do not manually edit, as your changes will be overwritten!
/* eslint-disable */
import { CustomType2 } from '../../src/customTypeProvider';
import * as rose from '@rosepg/rose';

export interface FooTableRow {
	column1: number;
	column2: number;
	column3: number | null;
	column4: number | null;
	column5: string;
	column6: string;
	column7: string | null;
	column8: string | null;
	column9: Date;
	column10: Date;
	column11: Date | null;
	column12: Date | null;
	customType1: 'bar' | 'baz' | null;
	customType2: CustomType2 | null;
	customType3: CustomType2;
	enumType1: 'active' | 'locked' | 'pending' | 'disabled' | null;
	arrayType: Array<string>;
	arrayTypeNullable: Array<string> | null;
}

export interface FooTableInsertRow {
	column1: number;
	column2?: number;
	column3?: number | null;
	column4?: number | null;
	column5: string;
	column6?: string;
	column7?: string | null;
	column8?: string | null;
	column9: Date;
	column10?: Date;
	column11?: Date | null;
	column12?: Date | null;
	customType1?: 'bar' | 'baz' | null;
	customType2?: CustomType2 | null;
	customType3: CustomType2;
	enumType1?: 'active' | 'locked' | 'pending' | 'disabled' | null;
	arrayType: Array<string>;
	arrayTypeNullable?: Array<string> | null;
}

export class TFooTable extends rose.QueryTable {
	readonly column1 = new rose.ColumnMetamodel<number>(this.$table, 'column_1');
	readonly column2 = new rose.ColumnMetamodel<number>(this.$table, 'column_2');
	readonly column3 = new rose.ColumnMetamodel<number | null>(this.$table, 'column_3');
	readonly column4 = new rose.ColumnMetamodel<number | null>(this.$table, 'column_4');
	readonly column5 = new rose.ColumnMetamodel<string>(this.$table, 'column_5');
	readonly column6 = new rose.ColumnMetamodel<string>(this.$table, 'column_6');
	readonly column7 = new rose.ColumnMetamodel<string | null>(this.$table, 'column_7');
	readonly column8 = new rose.ColumnMetamodel<string | null>(this.$table, 'column_8');
	readonly column9 = new rose.ColumnMetamodel<Date>(this.$table, 'column_9');
	readonly column10 = new rose.ColumnMetamodel<Date>(this.$table, 'column_10');
	readonly column11 = new rose.ColumnMetamodel<Date | null>(this.$table, 'column_11');
	readonly column12 = new rose.ColumnMetamodel<Date | null>(this.$table, 'column_12');
	readonly customType1 = new rose.ColumnMetamodel<'bar' | 'baz' | null>(this.$table, 'custom_type_1');
	readonly customType2 = new rose.ColumnMetamodel<CustomType2 | null>(this.$table, 'custom_type_2');
	readonly customType3 = new rose.ColumnMetamodel<CustomType2>(this.$table, 'custom_type_3');
	readonly enumType1 = new rose.ColumnMetamodel<'active' | 'locked' | 'pending' | 'disabled' | null>(this.$table, 'enum_type_1');
	readonly arrayType = new rose.ColumnMetamodel<Array<string>>(this.$table, 'array_type');
	readonly arrayTypeNullable = new rose.ColumnMetamodel<Array<string> | null>(this.$table, 'array_type_nullable');

	constructor ($tableAlias?: string) {
		super(new rose.TableMetamodel('foo_table', $tableAlias));
	}

}

export const QFooTable = rose.deepFreeze(new TFooTable());

export const FooTableAllColumns = {
	column1: QFooTable.column1,
	column2: QFooTable.column2,
	column3: QFooTable.column3,
	column4: QFooTable.column4,
	column5: QFooTable.column5,
	column6: QFooTable.column6,
	column7: QFooTable.column7,
	column8: QFooTable.column8,
	column9: QFooTable.column9,
	column10: QFooTable.column10,
	column11: QFooTable.column11,
	column12: QFooTable.column12,
	customType1: QFooTable.customType1,
	customType2: QFooTable.customType2,
	customType3: QFooTable.customType3,
	enumType1: QFooTable.enumType1,
	arrayType: QFooTable.arrayType,
	arrayTypeNullable: QFooTable.arrayTypeNullable,
};

export const FooTableDefaultQueries = {
	insertOne: function insertOne(row: FooTableInsertRow) {
		return rose.insertFromObject<TFooTable, FooTableInsertRow>(QFooTable, row).finalise({});
	},
};
